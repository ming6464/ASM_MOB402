<html lang="en">

<head>
    <meta charset="UTF-8" />
    <title>Home</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" />
    <style>
        html,
        body {
            height: 100%;
            width: 100%;
        }

        ;

        body {
            flex-direction: row;
        }
    </style>
</head>

<body onload="handleOnload()">
    <div class="container-fluid">
        <div class="row p-1 pb-0" style="height: 100%;">
            <div class="col-1 p-0" style="height: 100%;">
                <div class="bg-black pt-2 ps-1" style="border-top-left-radius:
                    5px;--bs-bg-opacity : .7;height: 100%;width: 97%;">
                    <span id="header">{{> header}}</span>
                </div>
            </div>
            <div class="col-11" id="content">
                {{{body}}}
            </div>
        </div>
        <div class="toast-container position-fixed bottom-0 end-0 p-3">
            <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div id="toast_title" class="toast-header bg-success" style="color: white;">
                    <strong class="me-auto">Notification</strong>
                    <small>Recently</small>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body" id="toast_mess">
                    hello
                </div>
            </div>
        </div>

    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let isEditClick = false;
        let idClick = 0;
        const toast = new bootstrap.Toast(document.querySelector('#liveToast'));
        const toastMess = document.querySelector('#toast_mess');
        const toastTitle = document.querySelector('#toast_title');
        let content = document.querySelector('#content');
        let tabs = document.querySelectorAll('[name = "tab"]');
        function handleOnload() {
            loadTabActive();
            loadContent('product');
        }

        function loadContent(field) {
            fetch(`/home/${field}`).then((res) => res.text()).then((data) => {
                content.innerHTML = data;
                loadList(field);
            });
        }

        function loadList(field) {
            fetch(`/get/${field}`).then(res => res.json()).then(data => showData(field, data))
        }

        function showData(field, list) {
            if (field != 'product' && field != 'user') return;
            let row = '', total = 0, tbody = document.querySelector('#tbody');
            cleanRow();
            switch (field) {
                case 'product':
                    list.forEach(e => {
                        row = `
                            <tr>
                                <td scope="col" colspan="1">${e.id}</td>
                                <td scope="col" colspan="2">${e.name}</td>
                                <td scope="col" colspan="1">${e.price}</td>
                                <td scope="col" colspan="1">${e.image}</td>
                                <td scope="col" colspan="1">${e.color}</td>
                                <td scope="col" colspan="1">${e.category}</td>
                                <td colspan="1">
                                    <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                                    <button type="button" name = "edit" class="btn btn-outline-dark">Edit</button>
                                    <button type="button" name = "delete" class="btn btn-outline-danger">Delete</button>
                                    </div>
                                </td>
                            </tr>`;
                        tbody.innerHTML += row;
                        total += parseFloat(e.price);
                    })
                    let rowTotal = `
                                <tr>
                                    <th colspan="3">Total</th>
                                    <th colspan="5" id = "total">${total}</th>
                                </tr>`;
                    tbody.innerHTML += rowTotal;
                    break;
                case 'user':
                    list.forEach(e => {
                        row = `
                            <tr>
                                <td scope="row" colspan="1">${e.id}</td>
                                <td colspan="2">${e.fullName}</td>
                                <td colspan="2">${e.email}</td>
                                <td colspan="2">${e.passwork}</td>
                                <td colspan="1">
                                    <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                                    <button type="button" name = "edit" class="btn btn-outline-dark">Edit</button>
                                    <button type="button" name = "delete" class="btn btn-outline-danger">Delete</button>
                                    </div>
                                </td>
                            </tr>`;
                        tbody.innerHTML += row;
                    })
                    break;
            }
            addEventClickButtons(field);
        }

        function cleanRow() {
            let row = document.querySelector('#tbody').querySelectorAll('tr');
            let length = row.length;
            for (let i = 0; i < length; i++) {
                row[i].remove();
            }
        }

        function addEventClickButtons(field) {
            if (field != 'product' && field != 'user') return;
            let editButtons = document.querySelectorAll('[name = "edit"]');
            let deleteButtons = document.querySelectorAll('[name = "delete"]');
            deleteButtons.forEach(btn => {
                btn.addEventListener('click', event => {
                    const tr = event.target.closest('tr');
                    const id = tr.querySelector('td').textContent;
                    fetch(`/home/${field}/${id}`, { method: 'delete' }).then(res => res.text()).then(data => {
                        let mess = field;
                        if (data == "false") mess += " not found!";
                        else mess += " Deleted!";
                        ShowToast(mess, data);
                        if (field == 'product') {
                            let totalElement = document.querySelector('#total');
                            let total = parseFloat(totalElement.textContent);
                            let price = parseFloat(tr.querySelectorAll('td')[2].textContent);
                            totalElement.innerHTML = total - price;
                        }
                        tr.remove();
                    })
                });
            })
            editButtons.forEach(btn => {
                btn.addEventListener('click', (event) => {
                    isEditClick = true;
                    showModal(field, event.target.closest('tr').querySelectorAll('td'));
                });
            })
        }
        function CreateItem() {
            CleanForm();
            isEditClick = false;
            const modal = new bootstrap.Modal(document.getElementById('staticBackdrop'), {
                keyboard: false,
                backdrop: 'static'
            });

            modal.show();
        }

        function loadTabActive() {
            for (let i = 0; i < tabs.length; i++) {
                tabs[i].addEventListener('click', () => {
                    loadContent(tabs[i].getAttribute('value'));
                    setTabActive(i);
                })
            }
        }

        function setTabActive(index) {
            tabs.forEach(e => {
                e.classList.remove('active');
            })
            tabs[index].classList.add('active');
        }

        function ShowToast(mess, isCorrect) {
            if (toast) {
                if (isCorrect == 'true') {
                    toastTitle.classList.remove('bg-danger');
                    toastTitle.classList.add('bg-success');
                } else {
                    toastTitle.classList.remove('bg-success');
                    toastTitle.classList.add('bg-danger');
                }
                toastMess.innerHTML = mess;
                toast.show();
            }
        }
        function search(field) {
            let value = document.querySelector('#inputSearch').value;
            if (value.length == 0) {
                loadList(field);
                return;
            }
            fetch(`/search/${field}/${value}`).then(res => res.json()).then(data => {
                showData(field, data);
            });
        }


        function CleanForm() {
            let pro = document.querySelector('#form').querySelectorAll('input');
            for (let i = 0; i < pro.length; i++) {
                pro[i].value = null;
            }
        }
        function saveForm(field) {
            let pro = document.querySelector('#form').querySelectorAll('input');
            let id = Math.floor(Math.random() * 100);
            let obj = {};
            if (field == 'product') {
                let name, price, category, color, image = 'image';
                name = pro[0].value;
                price = pro[1].value;
                category = pro[2].value;
                color = pro[3].value;
                obj = { id, name, price, image, color, category };
            } else {
                let fullName, email, passwork;
                fullName = pro[0].value;
                email = pro[1].value;
                passwork = pro[2].value;
                obj = { id, fullName, email, passwork };
            }
            let name = 'add';
            if (isEditClick) {
                name = 'edit';
                obj.id = idClick;
            }
            fetch(`/${name}/${field}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(obj)
            })
                .then(response => response.text())
                .then(data => {
                    if (data == 'false') {
                        ShowToast(`${field} is exist`, data);
                        return;
                    }
                    ShowToast(`${field} ${field}ed`, data);
                    if (isEditClick) editRow(field, obj);
                    else addRow(field, obj);

                })
                .catch(error => console.error(error))
        }

        function editRow(field, obj) {
            let tr = querySelector('#tbody').querySelectorAll('tr');
            for (let i = 0; i < tr.length; i++) {
                if (tr[i].querySelector('td').textContent == idClick) {
                    let td = tr.querySelectorAll('td');
                    if (field == 'user') {
                        td[0].innerHTML = obj.id;
                        td[1].innerHTML = obj.fullName;
                        td[2].innerHTML = obj.email;
                    } else {
                        td[0].innerHTML = obj.id;
                        td[1].innerHTML = obj.name;
                        td[2].innerHTML = obj.price;
                        td[2].innerHTML = obj.image;
                        td[2].innerHTML = obj.color;
                        td[2].innerHTML = obj.category;
                    }
                    break;
                }
            }
        }

        function addRow(field, obj) {
            let tbody = document.querySelector('#tbody');
            let row;
            if (field == 'product') {
                row = `
                            <tr>
                                <td scope="col" colspan="1">${obj.id}</td>
                                <td scope="col" colspan="2">${obj.name}</td>
                                <td scope="col" colspan="1">${obj.price}</td>
                                <td scope="col" colspan="1">${obj.category}</td>
                                <td scope="col" colspan="1">${obj.color}</td>
                                <td scope="col" colspan="1">${obj.image}</td>
                                <td colspan="1">
                                    <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                                    <button type="button" name = "edit" class="btn btn-outline-dark">Edit</button>
                                    <button type="button" name = "delete" class="btn btn-outline-danger">Delete</button>
                                    </div>
                                </td>
                            </tr>`;
                let row_total = tbody.querySelector('#total');
                let total = parseFloat(row_total.textContent) + parseFloat(obj[2]);
                row_total.parentElement.remove();
                let rowTotal = `
                                <tr>
                                    <th colspan="3">Total</th>
                                    <th colspan="5" id = "total">${total}</th>
                                </tr>`;
                row += rowTotal;
            } else {
                row = `
                            <tr>
                                <td scope="row" colspan="1">${obj.id}</td>
                                <td colspan="2">${obj.fullName}</td>
                                <td colspan="2">${obj.email}</td>
                                <td colspan="2">${obj.passwork}</td>
                                <td colspan="1">
                                    <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                                    <button type="button" name = "edit" class="btn btn-outline-dark">Edit</button>
                                    <button type="button" name = "delete" class="btn btn-outline-danger">Delete</button>
                                    </div>
                                </td>
                            </tr>`;
            }

            tbody.innerHTML += row;
        }
        function showModal(field, val) {
            let inputs = document.querySelector('#form').querySelectorAll('input');
            if (field == 'product') {
                idClick = val[0].textContent;
                inputs[0].value = val[1].textContent;
                inputs[1].value = Math.floor(val[2].textContent);
                inputs[2].value = val[5].textContent;
                inputs[3].value = val[4].textContent;
            } else {
                idClick = val[0].textContent;
                inputs[0].value = val[1].textContent;
                inputs[1].value = val[2].textContent;
                inputs[2].value = val[3].textContent;
            }
            const modal = new bootstrap.Modal(document.getElementById('staticBackdrop'), {
                keyboard: false,
                backdrop: 'static'
            });

            modal.show();
        }
    </script>
</body>

</html>