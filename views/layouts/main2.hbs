<html lang="en">

<head>
    <meta charset="UTF-8" />
    <title>Home</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" />
    <style>
        html,
        body {
            height: 100%;
            width: 100%;
        }

        ;

        body {
            flex-direction: row;
        }
    </style>
</head>

<body onload="handleOnload()">
    <div class="container-fluid">
        <div class="row p-1 pb-0" style="height: 100%;">
            <div class="col-1 p-0" style="height: 100%;">
                <div class="bg-black pt-2 ps-1" style="border-top-left-radius:
                    5px;--bs-bg-opacity : .7;height: 100%;width: 97%;">
                    <span id="header">{{> header}}</span>
                </div>
            </div>
            <div class="col-11" id="content">
                {{{body}}}
            </div>
        </div>
        <div class="toast-container position-fixed bottom-0 end-0 p-3">
            <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div id="toast_title" class="toast-header bg-success" style="color: white;">
                    <strong class="me-auto">Notification</strong>
                    <small>Recently</small>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body" id="toast_mess">
                    hello
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const toast = new bootstrap.Toast(document.querySelector('#liveToast'));
        const toastMess = document.querySelector('#toast_mess');
        const toastTitle = document.querySelector('#toast_title');
        let content = document.querySelector('#content');
        let tabs = document.querySelectorAll('[name = "tab"]');
        function handleOnload() {
            loadTabActive();
            loadContent('product');
        }

        function loadContent(field) {
            fetch(`/home/${field}`).then((res) => res.text()).then((data) => {
                content.innerHTML = data;
                loadList(field);
            });
        }

        function loadList(field) {
            fetch(`/get/${field}`).then(res => res.json()).then(data => showData(field, data))
        }

        function showData(field, list) {
            if (field != 'product' && field != 'user') return;
            let row = '', total = 0, tbody = document.querySelector('#tbody');
            cleanRow();
            switch (field) {
                case 'product':
                    list.forEach(e => {
                        row = `
                            <tr>
                                <td scope="col" colspan="1">${e.id}</td>
                                <td scope="col" colspan="2">${e.name}</td>
                                <td scope="col" colspan="1">${e.price}</td>
                                <td scope="col" colspan="1">${e.image}</td>
                                <td scope="col" colspan="1">${e.color}</td>
                                <td scope="col" colspan="1">${e.category}</td>
                                <td colspan="1">
                                    <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                                    <button type="button" name = "edit" class="btn btn-outline-dark">Edit</button>
                                    <button type="button" name = "delete" class="btn btn-outline-danger">Delete</button>
                                    </div>
                                </td>
                            </tr>`;
                        tbody.innerHTML += row;
                        total += parseFloat(e.price);
                    })
                    let rowTotal = `
                                <tr>
                                    <th colspan="3">Total</th>
                                    <th colspan="5" id = "total">${total}</th>
                                </tr>`;
                    tbody.innerHTML += rowTotal;
                    break;
                case 'user':
                    list.forEach(e => {
                        row = `
                            <tr>
                                <td scope="row" colspan="1">${e.id}</td>
                                <td colspan="2">${e.fullName}</td>
                                <td colspan="2">${e.email}</td>
                                <td colspan="2">${e.passwork}</td>
                                <td colspan="1">
                                    <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                                    <button type="button" name = "edit" class="btn btn-outline-dark">Edit</button>
                                    <button type="button" name = "delete" class="btn btn-outline-danger">Delete</button>
                                    </div>
                                </td>
                            </tr>`;
                        tbody.innerHTML += row;
                    })
                    break;
            }
            addEventClickButtons(field);
        }

        function cleanRow() {
            let row = document.querySelector('#tbody').querySelectorAll('tr');
            let length = row.length;
            for (let i = 0; i < length; i++) {
                row[i].remove();
            }
        }

        function addEventClickButtons(field) {
            if (field != 'product' && field != 'user') return;
            let editButtons = document.querySelectorAll('[name = "edit"]');
            let deleteButtons = document.querySelectorAll('[name = "delete"]');
            deleteButtons.forEach(btn => {
                btn.addEventListener('click', event => {
                    const tr = event.target.closest('tr');
                    const id = tr.querySelector('td').textContent;
                    fetch(`/home/${field}/${id}`, { method: 'delete' }).then(res => res.text()).then(data => {
                        let mess = field;
                        if (data == "false") mess += " not found!";
                        else mess += " Deleted!";
                        ShowToast(mess, data);
                        if (field == 'product') {
                            let totalElement = document.querySelector('#total');
                            let total = parseFloat(totalElement.textContent);
                            let price = parseFloat(tr.querySelectorAll('td')[2].textContent);
                            totalElement.innerHTML = total - price;
                        }
                        tr.remove();
                    })
                });
            })
            editButtons.forEach(btn => {
            })
        }

        function loadTabActive() {
            for (let i = 0; i < tabs.length; i++) {
                tabs[i].addEventListener('click', () => {
                    loadContent(tabs[i].getAttribute('value'));
                    setTabActive(i);
                })
            }
        }

        function setTabActive(index) {
            tabs.forEach(e => {
                e.classList.remove('active');
            })
            tabs[index].classList.add('active');
        }

        function ShowToast(mess, isCorrect) {
            if (toast) {
                if (isCorrect == 'true') {
                    toastTitle.classList.remove('bg-danger');
                    toastTitle.classList.add('bg-success');
                } else {
                    toastTitle.classList.remove('bg-success');
                    toastTitle.classList.add('bg-danger');
                }
                toastMess.innerHTML = mess;
                toast.show();
            }
        }
        function search(field) {
            let value = document.querySelector('#inputSearch').value;
            if (value.length == 0) {
                loadList(field);
                return;
            }
            fetch(`/search/${field}/${value}`).then(res => res.json()).then(data => {
                showData(field, data);
            });
        }
    </script>
</body>

</html>